version: '3.8'

services:
  openstack-dashboard:
    build: .
    container_name: openstack-monitoring-dashboard
    ports:
      - "5000:5000"
    environment:
      - OS_AUTH_URL=${OS_AUTH_URL}
      - OS_PROJECT_NAME=${OS_PROJECT_NAME}
      - OS_USERNAME=${OS_USERNAME}
      - OS_PASSWORD=${OS_PASSWORD}
      - OS_USER_DOMAIN_NAME=${OS_USER_DOMAIN_NAME:-Default}
      - OS_PROJECT_DOMAIN_NAME=${OS_PROJECT_DOMAIN_NAME:-Default}
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=False
      - COLLECTION_INTERVAL_MINUTES=15
      - DATA_RETENTION_DAYS=30
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prometheus for metrics storage
  prometheus:
    image: prom/prometheus:latest
    container_name: openstack-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Prometheus Exporter
  prometheus-exporter:
    build: .
    container_name: openstack-prometheus-exporter
    ports:
      - "9091:9091"
    environment:
      - OS_AUTH_URL=${OS_AUTH_URL}
      - OS_PROJECT_NAME=${OS_PROJECT_NAME}
      - OS_USERNAME=${OS_USERNAME}
      - OS_PASSWORD=${OS_PASSWORD}
      - OS_USER_DOMAIN_NAME=${OS_USER_DOMAIN_NAME:-Default}
      - OS_PROJECT_DOMAIN_NAME=${OS_PROJECT_DOMAIN_NAME:-Default}
      - PROMETHEUS_EXPORTER_PORT=9091
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    command: ["python", "prometheus_exporter.py"]

  # Grafana for advanced visualization
  grafana:
    image: grafana/grafana:latest
    container_name: openstack-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana_dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
